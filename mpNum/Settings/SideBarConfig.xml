<SideBarConfig version="1.0">
  <SideBar activetab="${res:SharpDevelop.SideBar.ClipboardRing}">
    <SideTab clipboardring="true" text="${res:SharpDevelop.SideBar.ClipboardRing}">
      <SideTabItem text="Text:, n2 As Object" value=", n2 As Object" />
      <SideTabItem text="Text:, n2.ToString()" value=", n2.ToString()" />
      <SideTabItem text="Text:Shared Function GetFunction03(FunctionEnum As S..." value="	&#xD;&#xA;	Shared Function GetFunction03(FunctionEnum As String, n1 As Object, n2 As Object, n3 As Object) As mpNum&#xD;&#xA;        Dim Result As String = np.Function03XL(FunctionEnum, n1.ToString(), n2.ToString(), n3.ToString(), &quot;KW&quot;, &quot;RW&quot;, &quot;Options&quot; )&#xD;&#xA;        Return CNum(Result)&#xD;&#xA;	End Function&#xD;&#xA;" />
      <SideTabItem text="Text:, n3 As Object" value=", n3 As Object" />
      <SideTabItem text="Text:, n3.ToString()" value=", n3.ToString()" />
      <SideTabItem text="Text:Shared Function GetFunction04(FunctionEnum As S..." value="	&#xD;&#xA;	&#xD;&#xA;	Shared Function GetFunction04(FunctionEnum As String, n1 As Object, n2 As Object, n3 As Object, n4 As Object) As mpNum&#xD;&#xA;        Dim Result As String = np.Function04XL(FunctionEnum, n1.ToString(), n2.ToString(), n3.ToString(), n4.ToString(), &quot;KW&quot;, &quot;RW&quot;, &quot;Options&quot; )&#xD;&#xA;        Return CNum(Result)&#xD;&#xA;	End Function&#xD;&#xA;" />
      <SideTabItem text="Text:, n4 As Object" value=", n4 As Object" />
      <SideTabItem text="Text:, n4.ToString()" value=", n4.ToString()" />
      <SideTabItem text="Text:Shared Function GetFunction05(FunctionEnum As S..." value="	&#xD;&#xA;	Shared Function GetFunction05(FunctionEnum As String, n1 As Object, n2 As Object, n3 As Object, n4 As Object, n5 As Object) As mpNum&#xD;&#xA;        Dim Result As String = np.Function05XL(FunctionEnum, n1.ToString(), n2.ToString(), n3.ToString(), n4.ToString(), n5.ToString(), &quot;KW&quot;, &quot;RW&quot;, &quot;Options&quot; )&#xD;&#xA;        Return CNum(Result)&#xD;&#xA;	End Function&#xD;&#xA;" />
      <SideTabItem text="Text:Shared Function GetFunction05(FunctionEnum As S..." value="	&#xD;&#xA;	Shared Function GetFunction05(FunctionEnum As String, n1 As Object, n2 As Object, n3 As Object, n4 As Object, n5 As Object) As mpNum&#xD;&#xA;        Dim Result As String = np.Function05XL(FunctionEnum, n1.ToString(), n2.ToString(), n3.ToString(), n4.ToString(), n5.ToString(), &quot;KW&quot;, &quot;RW&quot;, &quot;Options&quot; )&#xD;&#xA;        Return CNum(Result)&#xD;&#xA;	End Function&#xD;&#xA;" />
      <SideTabItem text="Text:, n5 As Object" value=", n5 As Object" />
      <SideTabItem text="Text:, n5.ToString()" value=", n5.ToString()" />
      <SideTabItem text="Text:Shared Function GetFunction06(FunctionEnum As S..." value="	&#xD;&#xA;	Shared Function GetFunction06(FunctionEnum As String, n1 As Object, n2 As Object, n3 As Object, n4 As Object, n5 As Object, n6 As Object) As mpNum&#xD;&#xA;        Dim Result As String = np.Function06XL(FunctionEnum, n1.ToString(), n2.ToString(), n3.ToString(), n4.ToString(), n5.ToString(), n6.ToString(), &quot;KW&quot;, &quot;RW&quot;, &quot;Options&quot; )&#xD;&#xA;        Return CNum(Result)&#xD;&#xA;	End Function&#xD;&#xA;" />
      <SideTabItem text="Text:, n6 As Object" value=", n6 As Object" />
      <SideTabItem text="Text:, n6.ToString()" value=", n6.ToString()" />
      <SideTabItem text="Text:) As Object" value=") As Object" />
      <SideTabItem text="Text:m3.x1 = -m1.x1" value="    m3.x1 = -m1.x1" />
      <SideTabItem text="Text:fneg" value="fneg" />
      <SideTabItem text="Text:fsub" value="fsub" />
      <SideTabItem text="Text:Imports mpFormulaNET&#xD;" value="&#xD;&#xA;Imports mpFormulaNET&#xD;&#xA;&#xD;&#xA;Module Program&#xD;&#xA;    Sub Main()&#xD;&#xA;        Console.WriteLine(&quot;Hello World!&quot;)&#xD;&#xA;        &#xD;&#xA;        mp.dps = 100&#xD;&#xA;        Dim a As New mpNum(&quot;2&quot;)&#xD;&#xA;        Dim b As New mpNum(&quot;11&quot;)&#xD;&#xA;        Dim d As New mpNum(&quot;66&quot;)&#xD;&#xA;        Dim e As New mpNum(&quot;11&quot;)&#xD;&#xA;        Console.WriteLine(a.Str())&#xD;&#xA;        Console.WriteLine(b.Str())&#xD;&#xA;        &#xD;&#xA;        Dim c As New mpNum()&#xD;&#xA;        c = mp.CNum(mp.pi())&#xD;&#xA;'        c = mp.pi()&#xD;&#xA;        Console.WriteLine(c.Str())&#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;        &#xD;&#xA;'         c = a - b&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        c = a * b&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        c = a / b&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        c = mp.pi()&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        &#xD;&#xA;'        c = mp.sqrt(a)&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        &#xD;&#xA;'        c = mp.hypot(a, b)&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        &#xD;&#xA;'        &#xD;&#xA;'        c = mp.npdf(a, b, d)&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;'        &#xD;&#xA;'        d=c&#xD;&#xA;'        &#xD;&#xA;'        Dim Cmp As Boolean = (d &lt;&gt; c)&#xD;&#xA;'        Console.WriteLine(Cmp.ToString())&#xD;&#xA;'        c = mp.hyp2f1(2, 0.5, 4, 0.75)&#xD;&#xA;'        Console.WriteLine(c.Str())&#xD;&#xA;&#xD;&#xA;        Console.Write(&quot;Press any key to continue . . . &quot;)&#xD;&#xA;        Console.ReadKey(True)&#xD;&#xA;    End Sub&#xD;&#xA;End Module&#xD;&#xA;" />
    </SideTab>
  </SideBar>
</SideBarConfig>